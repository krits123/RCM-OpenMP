%% In this Script we visuallize the execution time vs the number of threads
%used from the collected sata.

clc
clear all
close all

%% Time vs NumberOfThreads

nt2_th_3 = [0.015309 ,0.012344,0.013564,0.011530,0.008659,0.009229,0.011297,0.010015,0.008263,0.010233];

nt2_th_6 = [0.010317 ,0.016258,0.010865,0.008854,0.008900,0.010793,0.009364,0.009516,0.011879,0.011293 ];

nt2_th_10 = [0.015169 ,0.008620 ,0.014262,0.013251,0.011788,0.008741 ,0.012155,0.021411,0.010077,0.010342  ];

nt4_th_3 = [0.010570 ,0.008098,0.013995,0.012667,0.009568,0.009101,0.011362,0.008366,0.015480,0.013023  ];

nt4_th_6 = [0.008741 ,0.011860,0.012593 ,0.010168 ,0.007782 ,0.011890 ,0.007969,0.009612 ,0.010687 ,0.008394 ];

nt4_th_10 = [0.008664 ,0.007968,0.009110 ,0.007934 ,0.011349,0.008640,0.008270,0.009178,0.011153 ,0.017623,0.009855,0.009691];

nt8_th_3 = [0.011301 ,0.013011 ,0.012766 ,0.011032 ,0.018119 ,0.007971 ,0.010352 ,0.009260];

nt8_th_6 = [0.013861 ,0.010076 ,0.013891 ,0.008599 ,0.009459 ,0.008596 ,0.008983 ,0.008374 ,0.009338 ,0.010105 ];

nt8_th_10 = [0.016777 ,0.009149 ,0.009139 ,0.008575 ,0.016686 ,0.009312 ,0.007920 ,0.009752 ,0.013368 ,0.010758 ,0.017431 ];

nt10_th_6 = [0.019136 ,0.019423 ,0.024296 ,0.019402 ,0.019387 ,0.021179 ,0.022821 ,0.021377 ,0.020292 ,0.019001 ,0.020718 ];

nt10_th_10 = [0.019896 ,0.013462 ,0.021124 ,0.021765 ,0.025361 ,0.021141 ,0.011837 ,0.023582 ,0.021391 ];




figure

n = [2 4 8 10];
th10 = [mean(nt2_th_10) mean(nt4_th_10) mean(nt8_th_10) mean(nt10_th_10)];
th6 = [mean(nt2_th_6) mean(nt4_th_6) mean(nt8_th_6) mean(nt10_th_6)];
th3 = [mean(nt2_th_3) mean(nt4_th_3) mean(nt8_th_3)];


plot(n,th10,'g--o');
title(['ExecutionTime vs NumberOfThreads' char(10) 'Array size n = 2894 - number of non zeros nnz= 2043492'])
xlabel('NumberOfThreads')
ylabel('Executions Time [s]')
hold on
plot(n,th6,'b--*');
plot([2,4,8],th3,'r--+');
legend('SQTH = 10','SQTH = 6','SQTH = 3')

%% Time vs N


sqe_big1 = [0.004517 ,0.004306 ,0.004446 ,0.004366,0.005070 ];

sqe_big2 = [0.001898 ,0.001778 ,0.001810 ,0.001900, 0.001830 ,0.001751 ,0.001737,0.002253 ];

sqe_large = [0.010807 ,0.008580 ,0.008492 ,0.009194, 0.009424 ,0.008572 ,0.008519 ];

sqe_large1 = [0.010469 ,0.011553 ,0.012496 ,0.011098 ,0.011581 ,0.011797 ,0.011066];

sqe_large4 = [0.011706 ,0.0111686 ,0.008416 ,0.0117660 ,0.010446  ];

sqe_large5 = [0.016583 ,0.017341 ,0.020135 ,0.020495 , 0.016514 ,0.016621 ,0.017178 ];

sqe_large6 = [0.018931 ,0.017884 ,0.018291 ,0.018718 ,0.018241 ];

sqe_extraLarge1 = [0.062907  ,0.059586 ,0.063179 ,0.0650737 ,0.068387,0.072446 ];

sqe_extraLarge2 = [0.031566 ,0.033035 ,0.030806 ,0.032586 ,0.032665 ,0.033147 ,0.061753 ];

sqe_extraLarge3 = [0.074194 ,0.067714 ,0.066744 ,0.066507  ,0.065948 ,0.077237  ];



seq_times = [mean(sqe_big2) mean(sqe_big1) mean(sqe_large) mean(sqe_large1) mean(sqe_large6) mean(sqe_large5) mean(sqe_large4) mean(sqe_extraLarge2) mean(sqe_extraLarge1) mean(sqe_extraLarge3)];



n = [8032 10848 28924 44609 55590 63336 74752 94893 151926 227362];

par_big1 = [0.004989 ,0.006505 ,0.007561 ,0.004827 ,0.005811 ,0.005844 ,0.005297 ,0.005346 ,0.005448 ,0.006009  ];

par_big2 = [0.005898 ,0.004604 ,0.004237 ,0.003785 ,0.002753 ,0.004695  ];

par_large = [0.008741 ,0.011860,0.012593 ,0.010168 ,0.007782 ,0.011890 ,0.007969,0.009612 ,0.010687 ,0.008394 ];

par_large1 = [0.013797 ,0.021974 ,0.009625 ,0.016427 ,0.012704 ,0.015619 0.020791 ,0.012221 ,0.013105,0.014075  ];

par_large4 = [0.013415 ,0.016732 ,0.016576 ,0.021774 ,0.019825 ,0.010813 ,0.010165 ,0.008858 ,0.013915 ,0.016267 ,  ];

par_large5 = [0.015103,0.015884 ,0.015422 ,0.015587 ,0.015693 ,0.016344 ,0.014455 ,0.015261   ];

par_large6 = [0.019429 ,0.019441,0.018270 ,0.018684 ,0.019193 ,0.017287 ,0.017398 ,0.029292 ,0.018622  ];

par_extraLarge1 = [0.037068 ,0.045851 ,0.036213 ,0.038013 ,0.041088 ,0.042531  ,0.039515 ,0.037578 ,0.039544  ];

par_extraLarge2 = [0.022590 ,0.020976 ,0.022055 ,0.022559 ,0.024747 ,0.024991 ,0.022859 ,0.026668 ,0.023176 ,0.026680  ];

par_extraLarge3 = [0.045852 ,0.050229 ,0.059195 ,0.051191 ,0.046769 ,0.051191 ];



par_times = [mean(par_big2) mean(par_big1) mean(par_large) mean(par_large1) mean(par_large6) mean(par_large5) mean(par_large4) mean(par_extraLarge2) mean(par_extraLarge1) mean(par_extraLarge3) ]
figure 
plot(n,seq_times,'g--x');
title('Execution Time vs Array Size')
xlabel('Array Size N')
ylabel('Execution time [s]');
hold on 
plot(n,par_times,'r--o');

legend('Boost Library Implementation','Parallel OpenMp Implementation')

%% Speed Up calculation

figure
spUp = seq_times./par_times ;

plot(n,spUp,'r--x')


title('Speed Up vs Array Size')
xlabel('Array Size N')
ylabel('Speed up (times x)')




